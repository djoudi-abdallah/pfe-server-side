// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// prisma/schema.prisma

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}


// schema.prisma

model Website {
  website_id Int @id @default(autoincrement())
  websitename String @unique
  products Product[]
}

model Product {
  product_id                 String @id
  availability               String @default("")
  name                       String 
  price                      String 
  oldPrice                   String @default("")
  sectionName                String 
  img                        String 
  link                       String 
  website  Website @relation(fields: [websiteId], references: [website_id])
  websiteId Int  // Provide a default value here
  favorit Favorite[]
}



model User {
  user_id         Int       @id @default(autoincrement())
  firstName  String
  lastName   String
  username   String    @unique
  email      String    @unique
  password   String  
  isAdmin    Boolean   @default(false)
  favorites  Favorite[] 
  notification notification[]
  contacte contacte[]
}


// Define the Favorite model
model Favorite {
  favorite_id            Int       @id @default(autoincrement())
  user          User      @relation(fields: [userId], references: [user_id])
  userId        Int
  product       Product   @relation(fields: [productId], references: [product_id])
  productId    String
  pricef         Float
}
model notification{
  notification_id Int @id @default(autoincrement())
  contenue    String
  user        User @relation(fields: [userId], references: [user_id])
  userId      Int
}
model contacte{
  contacte_id Int @id @default(autoincrement())
  commentaire  String
  user        User @relation(fields: [userId], references: [user_id])
  userId      Int
}